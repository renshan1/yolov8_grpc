syntax = "proto3";
// go
option go_package = "./;trailer";
// Java
option java_multiple_files = false;
option java_package = "trailer";
option java_outer_classname = "trailer";

package trailer;

service Trailer {
  // 初始化, 主要是为了传配置进去
  rpc Init (Config) returns (Response) {}
  // 启动
  rpc Start (Request) returns (Response) {}
  // 获取状态
  rpc Status (Request) returns (StatusResponse) {}
  // 服务调用
  rpc Service (ServiceRequest) returns (ServiceResponse) {}
  // 数据查询
  rpc Query (DataRowsRequest) returns (DataRowsResponse) {}
  // 数据模型
  rpc Schema (SchemaRequest) returns (SchemaResponse) {}
  // 停止
  rpc Stop (Request) returns (Response) {}
}
// 通用配置
message Config {
    bytes kv = 1;
}
message Request {

}
message Response {
    int32 code = 1;
    string message = 2;
}
message ServiceRequest{
    bytes cmd = 1;
    bytes args = 2;
}
message ServiceResponse{
    int32 code = 1;
    bytes data = 2;
}
message StatusResponse {
    enum Status {
        RUNNING = 0;
        ERROR = 1;
        STOPED = 2;
    }
    Status status = 1;
    string message = 2;
}
// 数据列类型, 主要为了和前端JavaScript匹配，分了3类
enum ValueType {
    STRING = 0;
    NUMBER = 1;
    BOOL = 2;
}
// 请求拿表结构
message SchemaRequest{
}
// 行定义
message DataRow{
    repeated ColumnValue column = 1; // 一行多列
}
// 列定义
message Column{
    string name = 1;
    ValueType type = 2;
    string description = 3;
}
// 查出来的数据列
message ColumnValue{
    string name = 1;
    ValueType type = 2;
    string id = 3;
    bytes value = 4;
}
// 表结构返回
message SchemaResponse{
    int32 code = 1;
    string message = 2;
    repeated Column columns = 3;
}
// 请求查询
message DataRowsRequest{
    bytes query = 1; // SQL or other query
}
// 查询结果
message DataRowsResponse{
    repeated DataRow row = 1; // 多行
}